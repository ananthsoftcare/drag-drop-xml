make.exe all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.82.90
# Built for i686-pc-mingw32
# Copyright (C) 1988-2012 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Aug 29 10:59:10 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(patsubst %\,%,$(dir $<)))
# automatic
?F = $(notdir $?)
# default
.SHELLFLAGS := -c
# makefile
MAKEFLAGS = Rrqp
# automatic
?D = $(patsubst %/,%,$(patsubst %\,%,$(dir $?)))
# automatic
@D = $(patsubst %/,%,$(patsubst %\,%,$(dir $@)))
# environment
HOMEDRIVE = C:
# automatic
@F = $(notdir $@)
# automatic
^D = $(patsubst %/,%,$(patsubst %\,%,$(dir $^)))
# makefile
CURDIR := d:/gca-networked/gca-fe-main/fe-main
# default
SHELL := sh.exe
# environment
WINDIR = C:\Windows
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
NVM_HOME = C:\Users\Ananth\AppData\Roaming\nvm
# makefile (from 'Makefile', line 5)
MM_UTILITIES_DIR = ../mattermost-utilities
# environment
PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
TMP = C:\Users\Ananth\AppData\Local\Temp
# environment
PROGRAMW6432 = C:\Program Files
# environment
NVM_SYMLINK = C:\Program Files\nodejs
# environment
PROGRAMDATA = C:\ProgramData
# environment
VSCODE_CWD = C:\Users\Ananth\AppData\Local\Programs\Microsoft VS Code
# environment
PATH = C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files (x86)\PuTTY\;C:\Users\Ananth\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Program Files\dotnet\;C:\Users\Ananth\AppData\Local\Microsoft\WindowsApps;C:\Users\Ananth\AppData\Roaming\npm;C:\Users\Ananth\AppData\Roaming\nvm;C:\Program Files\nodejs;C:\Users\Ananth\AppData\Local\Programs\Microsoft VS Code\bin;C:\MinGW\bin;
# environment
COMMONPROGRAMW6432 = C:\Program Files\Common Files
# environment
ZES_ENABLE_SYSMAN = 1
# makefile (from 'Makefile', line 3)
BUILD_SERVER_DIR = ../mattermost-server
# environment
PROCESSOR_ARCHITECTURE = x86
# environment
ONEDRIVE = C:\Users\Ananth\OneDrive
# environment
USERPROFILE = C:\Users\Ananth
# environment
ALLUSERSPROFILE = C:\ProgramData
# environment
NUMBER_OF_PROCESSORS = 8
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver
# makefile (from 'Makefile', line 7)
NODE_OPTIONS = --max-old-space-size=4096
# automatic
%F = $(notdir $%)
# environment
CHROME_CRASHPAD_PIPE_NAME = \\.\pipe\crashpad_24300_BCNMATFEDUNNLPPQ
# environment
COMPUTERNAME = DESKTOP-5TJKLC0
# environment
PROGRAMFILES = C:\Program Files (x86)
# environment
DRIVERDATA = C:\Windows\System32\Drivers\DriverData
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
USERNAME = Ananth
# environment
PUBLIC = C:\Users\Public
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
VSCODE_CODE_CACHE_PATH = C:\Users\Ananth\AppData\Roaming\Code\CachedData\e4503b30fc78200f846c62cf8091b76ff5547662
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
COMMONPROGRAMFILES = C:\Program Files (x86)\Common Files
# environment
LOGONSERVER = \\DESKTOP-5TJKLC0
# environment
ONEDRIVECONSUMER = C:\Users\Ananth\OneDrive
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
USERDOMAIN = DESKTOP-5TJKLC0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# default
MAKE_VERSION := 3.82.90
# makefile
.DEFAULT_GOAL := build-storybook
# environment
PROGRAMFILES(X86) = C:\Program Files (x86)
# automatic
%D = $(patsubst %/,%,$(patsubst %\,%,$(dir $%)))
# environment
LOCALAPPDATA = C:\Users\Ananth\AppData\Local
# environment
PSMODULEPATH = C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules
# default
MAKE_COMMAND := make.exe
# environment
PROCESSOR_ARCHITEW6432 = AMD64
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 140 Stepping 1, GenuineIntel
# environment
OS = Windows_NT
# environment
VSCODE_IPC_HOOK = \\.\pipe\26c84a339f3633e8cef73f6efa5e96b2-1.70.2-main-sock
# environment
HOMEPATH = \Users\Ananth
# environment
COMMONPROGRAMFILES(X86) = C:\Program Files (x86)\Common Files
# environment
PROMPT = $P$G
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(patsubst %\,%,$(dir $*)))
# makefile (from 'Makefile', line 4)
BUILD_WEBAPP_DIR = ../mattermost-webapp
# environment
SYSTEMROOT = C:\Windows
# automatic
+D = $(patsubst %/,%,$(patsubst %\,%,$(dir $+)))
# automatic
+F = $(notdir $+)
# environment
APPDATA = C:\Users\Ananth\AppData\Roaming
# environment
TEMP = C:\Users\Ananth\AppData\Local\Temp
# environment
COMSPEC = C:\Windows\system32\cmd.exe
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
SYSTEMDRIVE = C:
# environment
SESSIONNAME = Console
# environment
PROCESSOR_REVISION = 8c01
# makefile (from 'Makefile', line 6)
EMOJI_TOOLS_DIR = ./build/emoji
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
PROCESSOR_LEVEL = 6
# environment
VSCODE_PID = 24300
# environment
USERDOMAIN_ROAMINGPROFILE = DESKTOP-5TJKLC0
# variable set hash-table stats:
# Load=92/1024=9%, Rehash=0, Collisions=12/111=11%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# C:\Windows\System32\WindowsPowerShell\v1.0\ (key C:/Windows/System32/WindowsPowerShell/v1.0/, mtime 1629864837): 30 files, no impossibilities.
# . (key d:/gca-networked/gca-fe-main/fe-main, mtime 1661433199): 55 files, no impossibilities.
# C:\Users\Ananth\AppData\Roaming\npm (key C:/Users/Ananth/AppData/Roaming/npm, mtime 1655375933): 9 files, no impossibilities.
# C:\Users\Ananth\AppData\Roaming\nvm (key C:/Users/Ananth/AppData/Roaming/nvm, mtime 1657871747): 13 files, no impossibilities.
# C:\Program Files\Git\cmd (key C:/Program Files/Git/cmd, mtime 1633933164): 8 files, no impossibilities.
# C:\Windows\System32\OpenSSH\: could not be stat'd.
# C:\MinGW\bin (key C:/MinGW/bin, mtime 1657873432): 8 files, no impossibilities.
# C:\Users\Ananth\AppData\Local\Microsoft\WindowsApps (key C:/Users/Ananth/AppData/Local/Microsoft/WindowsApps, mtime 1660917670): 15 files, no impossibilities.
# C:\Program Files (x86)\PuTTY\ (key C:/Program Files (x86)/PuTTY/, mtime 1638248141): 12 files, no impossibilities.
# C:\Users\Ananth\AppData\Local\Programs\Microsoft VS Code\bin (key C:/Users/Ananth/AppData/Local/Programs/Microsoft VS Code/bin, mtime 1661142174): 4 files, no impossibilities.
# C:\Windows (key C:/Windows, mtime 1661485447): 118 files, no impossibilities.
# C:\Windows\System32\Wbem (key C:/Windows/System32/Wbem, mtime 1657873595): 153 files, no impossibilities.
# C:\Program Files\dotnet\ (key C:/Program Files/dotnet/, mtime 1661401879): 8 files, no impossibilities.
# C:\Windows\system32 (key C:/Windows/system32, mtime 1661700482): 2779 files, no impossibilities.
# C:\Program Files\nodejs (key C:/Program Files/nodejs, mtime 1657871811): 8 files, no impossibilities.

# 3220 files, no impossibilities in 15 directories.

# Implicit Rules

# No implicit rules.

# Files

check-types: node_modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 28):
	@echo Checking for TypeScript compliance
	npm run check-types

update-dependencies:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 169):
	npm update --depth 9999
	npm audit fix
	@echo Automatic dependency update complete.
	@echo You should manually inspect changes to package.json and pin exact versions of packages where appropriate.

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 99):
	@echo Stopping changes watching
	wmic process where "Caption='node.exe' and CommandLine like '%webpack%'" call terminate

clean-e2e:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 152):
	@if [ $(shell docker ps -a | grep -ci mattermost-mysql-e2e) -eq 1 ]; then \
		echo stopping mattermost-mysql-e2e; \
		docker stop mattermost-mysql-e2e > /dev/null; \
	fi
	cd $(BUILD_SERVER_DIR) && [[ -f config/config-backup.json ]] && \
		cp config/config-backup.json config/config.json && echo "revert local config.json" || \
		echo "config-backup.json not found" && sed -i'' -e 's|"DataSource": ".*"|"DataSource": "mmuser:mostest@tcp(dockerhost:3306)/mattermost_test?charset=utf8mb4,utf8\u0026readTimeout=30s\u0026writeTimeout=30s"|g' config/config.json

i18n-extract:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 38):
	npm run mmjstool -- i18n extract-webapp

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: build test run clean stop check-style fix-style run-unit emojis help package-ci storybook build-storybook update-dependencies
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-08-03 14:03:43
#  File has been updated.
#  Successfully updated.

test: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 33):
	@echo Running jest unit/component testing
	npm run test

# Not a target:
package-lock.json:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 72):
	@echo Building mattermost Webapp
	rm -rf dist
	npm run build

build-storybook: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 10):
	@echo Building storybook
	npm run build-storybook

check-style: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 18):
	@echo Checking for style guide compliance
	npm run check

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 166):
	@grep -E '^[0-9a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

package-ci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 58):
	@echo Building mattermost Webapp
	rm -rf dist
	npm run build
	@echo Packaging webapp
	mkdir tmp
	mv dist tmp/client
	tar -C tmp -czf mattermost-webapp.tar.gz client
	mv tmp/client dist
	rmdir tmp

build-dev: node_modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 79):
	@echo Building mattermost Webapp
	rm -rf dist
	npm run build-dev

# Not a target:
package.json:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

dev: node_modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 91):
	npm run dev-server

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

package: build
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	@echo Packaging webapp
	mkdir tmp
	mv dist tmp/client
	tar -C tmp -czf mattermost-webapp.tar.gz client
	mv tmp/client dist
	rmdir tmp

restart: | stop run
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 86):
	@echo Running mattermost Webapp for development
	npm run run &

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 110):
	@echo Cleaning Webapp
	rm -rf dist
	rm -rf node_modules

run-unit:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

storybook: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 15):
	npm run storybook

fix-style: node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo Fixing lint issues to follow style guide
	npm run fix

emojis:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 162):
	SERVER_DIR=$(BUILD_SERVER_DIR) npm run make-emojis

run-fullmap: node_modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 94):
	@echo Running mattermost Webapp for development
	npm run run &

e2e-test: node_modules
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 116):
	@echo E2E: Running mattermost-mysql-e2e
	@if [ $(shell docker ps -a | grep -ci mattermost-mysql-e2e) -eq 0 ]; then \
		echo starting mattermost-mysql-e2e; \
		docker run --name mattermost-mysql-e2e -p 35476:3306 -e MYSQL_ROOT_PASSWORD=mostest \
		-e MYSQL_USER=mmuser -e MYSQL_PASSWORD=mostest -e MYSQL_DATABASE=mattermost_test -d mysql:5.7 > /dev/null; \
	elif [ $(shell docker ps | grep -ci mattermost-mysql-e2e) -eq 0 ]; then \
		echo restarting mattermost-mysql-e2e; \
		docker start mattermost-mysql-e2e > /dev/null; \
	fi
	cd $(BUILD_SERVER_DIR) && [[ -f config/config.json ]] && \
		cp config/config.json config/config-backup.json && make config-reset || \
		echo "config.json not found" && make config-reset
	@echo E2E: Starting the server
	cd $(BUILD_SERVER_DIR) && $(MAKE) run
	@echo E2E: Generating test data
	cd $(BUILD_SERVER_DIR) && $(MAKE) test-data
	@echo E2E: Running end-to-end testing
	cd e2e && npm install && npm run cypress:run
	@echo E2E: Stoppping the server
	cd $(BUILD_SERVER_DIR) && $(MAKE) stop
	@echo E2E: stopping mattermost-mysql-e2e
	docker stop mattermost-mysql-e2e > /dev/null
	cd $(BUILD_SERVER_DIR) && [[ -f config/config-backup.json ]] && \
		cp config/config-backup.json config/config.json && echo "revert local config.json" || \
		echo "config-backup.json not found" && sed -i'' -e 's|"DataSource": ".*"|"DataSource": "mmuser:mostest@tcp(dockerhost:3306)/mattermost_test?charset=utf8mb4,utf8\u0026readTimeout=30s\u0026writeTimeout=30s"|g' config/config.json
	@echo E2E: Tests completed

node_modules: package.json package-lock.json
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	@echo Getting dependencies using npm
	node skip_integrity_check.js
	npm install
	touch $@

# files hash-table stats:
# Load=31/1024=3%, Rehash=0, Collisions=2/86=2%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 6 (5) / strings = 3217 / storage = 48050 B / avg = 14 B
# current buf: size = 8174 B / used = 7220 B / count = 507 / avg = 14 B
# other used: total = 39876 B / count = 2710 / avg = 14 B
# other free: total = 40 B / max = 14 B / min = 2 B / avg = 8 B

# strcache performance: lookups = 3319 / hit rate = 3%
# hash-table stats:
# Load=3217/8192=39%, Rehash=0, Collisions=998/3319=30%
# Finished Make data base on Mon Aug 29 10:59:10 2022

 
make.exe: *** No rule to make target 'all'.  Stop.

